import java.util.concurrent.TimeUnit

plugins {
  id 'org.springframework.boot' apply(false)
  id 'io.spring.dependency-management'
//  id 'com.voc.devtools'
}

group = 'com.voc'

allprojects {
  apply plugin: 'maven-publish'

  group = 'com.voc'
  configurations.all {
    resolutionStrategy {
      /* 动态版本依赖缓存 10 minutes */
      cacheDynamicVersionsFor(10, TimeUnit.MINUTES)
      /* SNAPSHOT版本依赖缓存 0 seconds */
      cacheChangingModulesFor(0, TimeUnit.SECONDS)
    }
  }

}

subprojects {
  apply plugin: 'java-library'
//  apply plugin: 'com.voc.devtools'


  if (path.startsWith(":spring-boot") || path.startsWith(":examples")) {
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    bootJar {
      enabled(false)
    }

    jar {
      enabled(true)
    }

  }

  repositories {
    /* Local */
    maven { url "file://D:/SoftWare/Maven/repository" }
    /* Ali Yun central仓和jcenter仓的聚合仓 */
    maven { url 'https://maven.aliyun.com/repository/public/' }
    maven {
      url 'https://packages.aliyun.com/maven/repository/2038604-release-0bMxsA/'
      credentials {
        username '5f4ba059fa82bfeb805a1e09'
        password 'a3XkZLNApybs'
      }
    }
    maven {
      url 'https://packages.aliyun.com/maven/repository/2038604-snapshot-XNRePo/'
      credentials {
        username '5f4ba059fa82bfeb805a1e09'
        password 'a3XkZLNApybs'
      }
    }
  }

  dependencies {
//    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    annotationProcessor "org.projectlombok:lombok:1.18.4"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.4"
//    implementation group: 'org.springframework.security.experimental', name: 'spring-security-oauth2-authorization-server', version: '0.1.1'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
  }

  configurations {
    compileOnly {
      extendsFrom(annotationProcessor)
    }

    testImplementation{
      extendsFrom(testAnnotationProcessor)
    }

    testcompileOnly {
      extendsFrom(annotationProcessor)
    }
  }

  tasks.withType(Delete.class) {
    delete('out')
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        versionMapping {
          usage('java-api') {
            fromResolutionOf('runtimeClasspath')
          }
          usage('java-runtime') {
            fromResolutionResult()
          }
        }
        pom {
          developers {
            developer {
              id = 'coffee377'
              name = 'Wu Yujie'
              email = 'coffee377@dingtalk.com'
            }
          }
        }
      }

    }
    /* 声明要发布到的存储库 */
    repositories {
      /* 本地仓库 */
      maven {
        name "local"
        url = "D:/SoftWare/Maven/repository"
      }
      /* 阿里云效个人仓库 */
      maven {
        // change to point to your repo, e.g. http://my.org/repo
        def repo = 'https://packages.aliyun.com/maven/repository/2038604'
        def snapshotsRepo = "${repo}-snapshot-XNRePo/"
        def releaseRepo = "${repo}-release-0bMxsA/"
        name "AliYun"
        credentials {
          username '5f4ba059fa82bfeb805a1e09'
          password 'a3XkZLNApybs'
        }
        url = version.endsWith('SNAPSHOT') ? snapshotsRepo : releaseRepo
      }

    }

  }

}

dependencies {
}
