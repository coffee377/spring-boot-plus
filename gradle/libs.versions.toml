[versions]
spring-boot = "2.5.15"
spring-cloud = "2020.0.6"
spring-cloud-alibaba = "2021.1"
spring-security = "5.7.11"
spring-security-oauth2-authorization-server = "0.4.5"
spring-doc-openapi = "1.7.0"
dependency-management = "1.1.4"

lombok = "1.18.24"
lombok-mapstruct-binding = "0.2.0"
mapstruct = "1.5.5.Final"
kotlin = "1.6.21"
junit5 = "5.7.2"
semantic = "2.1.1"
asciidoctor = "3.3.2"
gitlab = "5.5.0"
smartdoc = "2.6.0-release" # https://plugins.gradle.org/plugin/com.github.shalousun.smart-doc
intellij-plugin = "1.9.0"
changelog-plugin = "1.3.1"
openapi-generator = "7.2.0"
dingtalk-service-sdk = "2.0.0" # 旧版 SDK
dingtalk-sdk = "2.0.84"

jq-apis = "3.2.4"
jq-service = "3.0.5"
jq-boot-commons = "3.0.5"
jq-boot-starter-persistent-mysql = "3.1.3"
jq-boot-starter-observe = "3.0.3"

socket-io-server = "4.1.2"
grpc = "1.61.1"

[libraries]
spring-boot = { group = "org.springframework.boot", name = "spring-boot-gradle-plugin", version.ref = "spring-boot" }
spring-boot-gradle-plugin = { group = "org.springframework.boot", name = "spring-boot-gradle-plugin", version.ref = "spring-boot" }
spring-boot-dependencies = { group = "org.springframework.boot", name = "spring-boot-dependencies", version.ref = "spring-boot" }
spring-cloud-dependencies = { group = "org.springframework.cloud", name = "spring-cloud-dependencies", version.ref = "spring-cloud" }
spring-cloud-alibaba-dependencies = { group = "com.alibaba.cloud", name = "spring-cloud-alibaba-dependencies", version.ref = "spring-cloud-alibaba" }
spring-security-oauth2-authorization-server = { group = "org.springframework.security", name = "spring-security-oauth2-authorization-server", version.ref = "spring-security-oauth2-authorization-server" }
spring-security-bom = { group = "org.springframework.security", name = "spring-security-bom", version.ref = "spring-security" }
spring-doc-openapi = { group = "org.springdoc", name = "springdoc-openapi-ui", version.ref = "spring-doc-openapi" }
spring-doc-openapi-webflux = { group = "org.springdoc", name = "springdoc-openapi-webflux-ui", version.ref = "spring-doc-openapi" }
dependency-management = { group = "io.spring.gradle", name = "dependency-management-plugin", version.ref = "dependency-management" }
io-grpc-bom = { group = "io.grpc", name = "grpc-bom", version.ref = "grpc" }

mybatis = { group = "org.mybatis", name = "mybatis", version = "3.5.15" }
mybatis-boot = { module = "org.mybatis.spring.boot:mybatis-spring-boot-starter", version = "2.3.2" }
mybatis-plus-boot = { group = "com.baomidou", name = "mybatis-plus-boot-starter", version = "3.5.5" }


lombok = { group = "org.projectlombok", name = "lombok", version.ref = "lombok" }
lombok-mapstruct-binding = { group = "org.projectlombok", name = "lombok-mapstruct-binding", version.ref = "lombok-mapstruct-binding" }

mapstruct = { group = "org.mapstruct", name = "mapstruct", version.ref = "mapstruct" }
mapstruct-processor = { group = "org.mapstruct", name = "mapstruct-processor", version.ref = "mapstruct" }

junit-jupiter-api = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit5" }
junit-jupiter-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit5" }

semantic-versioning = { group = "de.skuzzle", name = "semantic-version", version.ref = "semantic" }

# DingTalk SDK
dingtalk-service-sdk = { group = "com.aliyun", name = "alibaba-dingtalk-service-sdk", version.ref = "dingtalk-service-sdk" }
dingtalk-sdk = { group = "com.aliyun", name = "dingtalk", version.ref = "dingtalk-sdk" }

gitlab = { group = "org.gitlab4j", name = "gitlab4j-api", version.ref = "gitlab" }

openapi-generator = { group = "org.openapitools", name = "openapi-generator", version.ref = "openapi-generator" }
openapi-generator-cli = { group = "org.openapitools", name = "openapi-generator-cli", version.ref = "openapi-generator" }
# jqsoft
jq-apis = { group = "net.jqsoft", name = "jq-apis", version.ref = "jq-apis" }
jq-service = { group = "net.jqsoft", name = "jq-service", version.ref = "jq-service" }
jq-boot-commons = { group = "net.jqsoft", name = "jq-boot-commons", version.ref = "jq-boot-commons" }
jq-boot-starter-persistent-mysql = { group = "net.jqsoft", name = "jq-boot-starter-persistent-mysql", version.ref = "jq-boot-starter-persistent-mysql" }
jq-boot-starter-observe = { group = "net.jqsoft", name = "jq-boot-starter-observe", version.ref = "jq-boot-starter-observe" }

# socket.js
socket-io-server = { group = "io.socket", name = "socket.io-server", version.ref = "socket-io-server" }

[bundles]
dingtalk = ["dingtalk-service-sdk", "dingtalk-sdk"]
lombok = ["lombok", "lombok-mapstruct-binding"]
mapstruct = ["mapstruct", "mapstruct-processor"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
dependency-management = { id = "io.spring.dependency-management", version.ref = "dependency-management" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
asciidoctor-pdf = { id = "org.asciidoctor.jvm.pdf", version.ref = "asciidoctor" }
asciidoctor-epub = { id = "org.asciidoctor.jvm.epub", version.ref = "asciidoctor" }
smartdoc = { id = "com.github.shalousun.smart-doc", version.ref = "smartdoc" }

jetbrains-changelog = { id = "org.jetbrains.changelog", version.ref = "changelog-plugin" }
jetbrains-intellij = { id = "org.jetbrains.intellij", version.ref = "intellij-plugin" }
openapi-generator = { id = "org.openapi.generator", version.ref = "openapi-generator" }
#hierynomus-license = { id = "com.github.hierynomus.license", version.ref = "license-plugin" }
#nebula-integtest = { id = "nebula.integtest", version.ref = "nebula-integtest-plugin" }

